apply plugin: 'com.android.library'
apply plugin: 'android-maven'

repositories {
    mavenCentral()
    jcenter();
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.squareup.picasso:picasso:2.3.4'
    compile 'org.apache.commons:commons-lang3:3.3+'
    compile 'com.google.code.gson:gson:2.3+'
    compile 'com.android.support:support-v4:20.0.0'



}

android {
    defaultConfig {
        versionCode 1
        versionName "0.0.1"
    }

    project.archivesBaseName = "Teasme-SDK"
    project.group = "net.netm.apps.libs"
    project.version = defaultConfig.versionName

    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (android.defaultConfig.versionName.endsWith('SNAPSHOT')) {
                repository(url: 'https://repository.net-m.de/content/repositories/netm-snapshots') {
                    authentication(userName: mavenUser, password: mavenPassword)
                }
            } else {
                repository(url: 'https://repository.net-m.de/content/repositories/netm-releases') {
                    authentication(userName: mavenUser, password: mavenPassword)
                }
            }
        }
    }
}
